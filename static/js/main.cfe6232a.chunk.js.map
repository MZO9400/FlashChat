{"version":3,"sources":["Containers/UserProfile/UserProfile.module.css","Containers/Profile/Profile.module.css","axiosInstance.js","headers.js","Redux/actions.js","Redux/actionTypes.js","Containers/Nav/Nav.js","Containers/Profile/Profile.js","Containers/Login/Login.js","Containers/Wall/Wall.js","Components/Search/Search.js","Containers/UserProfile/UserProfile.js","Redux/reducer.js","Redux/Store.js","serviceWorker.js","Components/DialogModal/DialogModal.js","ErrorHandler.js","index.js"],"names":["module","exports","instance","Axios","create","baseURL","Boolean","process","REACT_APP_isDebugging","setAuthToken","token","axios","defaults","headers","common","signInEmail","email","password","callback","dispatch","type","post","then","res","localStorage","setItem","data","uid","decode","id","payload","isAdmin","loggedIn","catch","e","title","response","statusText","text","error","getProfileInfo","er","console","log","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","list","width","cursor","search","position","borderRadius","shape","backgroundColor","fade","palette","white","marginLeft","breakpoints","up","searchIcon","padding","height","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","useStylesProgress","CircularIndeterminate","classes","className","CircularProgress","connect","state","loggingAction","checkLogStatus","getItem","decoded","exp","Date","now","actions","logOut","removeItem","resetError","withRouter","props","React","useEffect","history","push","redirect","useState","loggedInMenuOpen","setLoggedInMenuOpen","searchValue","setSearchValue","location","pathname","isDrawerOpen","setDrawer","searchHandler","length","Fragment","AppBar","Toolbar","IconButton","edge","aria-label","onClick","Typography","variant","InputBase","placeholder","input","value","onChange","target","inputProps","onKeyDown","key","style","currentTarget","anchorEl","keepMounted","open","onClose","MenuItem","Button","SwipeableDrawer","anchor","onOpen","role","List","ListItem","ListItemIcon","ListItemText","Divider","Profile","name","date","currentPass","newPass","editing","comments","username","avatar","image","mimetype","componentDidMount","a","setState","_id","userID","changeName","v","changeEmail","changeCurrPass","changePass","updateProfile","status","setError","toggleVisibility","i","hidden","deleteComment","filter","updateAvatar","event","files","formData","FormData","reader","FileReader","file","onloadend","result","append","put","readAsDataURL","toShow","CSS","editIcon","Avatar","src","this","toUpperCase","toLocaleString","accept","htmlFor","avatarPlus","inputForm","inputpadding","TextField","label","autoComplete","required","Card","posts","map","val","postCard","removeIcon","join","fromID","fontSize","fontWeight","comment","edited","editedTime","Component","useStylesSU","paper","marginTop","flexDirection","margin","secondary","main","form","submit","SignUp","Container","component","maxWidth","CssBaseline","Grid","container","item","xs","fullWidth","autoFocus","fn","FormControl","pass","FormHelperText","disabled","validity","justify","Link","switchSignState","useStylesSI","SignIn","noValidate","LoginPage","signIn","validateSignIn","test","validateSignUp","updateEmail","updatePass","updateName","updateUsername","afterLogin","from","signUpEmail","user","Wall","fetchSize","page","window","addEventListener","onScroll","fetchNextPosts","componentWillUnmount","removeEventListener","limit","hasReachedBottom","innerHeight","document","documentElement","scrollTop","scrollingElement","scrollHeight","fromName","toID","toName","alignContent","UserProfile","newPostTitle","newPostText","commentEditTitle","commentEditText","isFriend","componentDidUpdate","prevProps","match","params","friendshipStatus","addPost","isValid","toggleFriend","chatWith","Dialog","DialogTitle","DialogContent","DialogActions","x","marginBottom","multiline","maxrows","messageState","mainReducer","action","store","createStore","reducers","applyMiddleware","thunk","hostname","aria-labelledby","aria-describedby","DialogContentText","buttonText","ErrorHandler","DialogModal","require","config","ToRender","privateRoutes","exact","path","loginRoutes","Login","to","publicRoutes","Search","ReactDOM","render","StrictMode","basename","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.cfe6232a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"UserProfile_root__3NzBH\",\"avatar\":\"UserProfile_avatar__2xMy0\",\"editIcon\":\"UserProfile_editIcon__2hw2k\",\"removeIcon\":\"UserProfile_removeIcon__JOmn1\",\"posts\":\"UserProfile_posts__3YowZ\",\"postCard\":\"UserProfile_postCard__YnzQm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Profile_root__331LO\",\"posts\":\"Profile_posts__2kI1Q\",\"postCard\":\"Profile_postCard__MCEZP\",\"avatar\":\"Profile_avatar__1RCtk\",\"avatarPlus\":\"Profile_avatarPlus__2E7Br\",\"editIcon\":\"Profile_editIcon__3l0gk\",\"removeIcon\":\"Profile_removeIcon__3NLoh\",\"inputForm\":\"Profile_inputForm__3fNxS\",\"inputpadding\":\"Profile_inputpadding__tnqeC\"};","import Axios from 'axios';\n\nconst instance = Axios.create({\n    baseURL: Boolean(process.env.REACT_APP_isDebugging) ? 'http://localhost:8000' : 'https://flash-chat.azurewebsites.net'\n});\nexport default instance;\n","import axios from './axiosInstance';\n\nexport const setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common[\"Authorization\"] = token;\n    } else {\n        delete axios.defaults.headers.common[\"Authorization\"];\n    }\n};","import * as actionTypes from \"./actionTypes\";\nimport decode from 'jwt-decode';\nimport {setAuthToken} from '../headers';\nimport Axios from '../axiosInstance';\n\nexport const setLoggingAction = () => {\n    return (dispatch) => {\n        dispatch({type: actionTypes.LOGGING_ACTION});\n    };\n};\nexport const checkLogStatus = (callback) => {\n    return (dispatch) => {\n        dispatch({type: actionTypes.LOGGING_ACTION});\n        let token = localStorage.getItem(\"JWToken\");\n        if (token) {\n            const decoded = decode(token);\n            if (decoded.exp >= (Date.now() / 1000)) {\n                setAuthToken(token);\n                callback && callback();\n                return dispatch({\n                    type: actionTypes.LOGGED_IN, payload: {\n                        isAdmin: false,\n                        loggedIn: decoded.id\n                    }\n                });\n            }\n        }\n        dispatch({type: actionTypes.LOGGED_OUT});\n    };\n};\n\nexport const logOut = () => {\n    return (dispatch) => {\n        localStorage.removeItem(\"JWToken\");\n        setAuthToken(false);\n        dispatch({type: actionTypes.LOGGED_OUT})\n    };\n};\n\nexport const signInEmail = (email, password, callback) => {\n    return (dispatch) => {\n        dispatch({type: actionTypes.LOGGING_ACTION})\n        Axios.post(\"/api/users/login\", {email, password})\n            .then(res => {\n                localStorage.setItem(\"JWToken\", res.data.token);\n                setAuthToken(res.data.token);\n                const uid = decode(res.data.token).id;\n                dispatch({\n                    type: actionTypes.LOGGED_IN, payload: {\n                        isAdmin: false,\n                        loggedIn: uid\n                    }\n                });\n                callback && callback();\n            })\n            .catch(e => {\n                dispatch({\n                    type: actionTypes.ERROR, payload: {title: e.response.statusText, text: e.response.data.error}\n                })\n            })\n    };\n};\nexport const signUpEmail = (email, password, name, user, callback) => {\n    return (dispatch) => {\n        Axios.post(\"/api/users/register\", {email, name, password, user})\n            .then(() => dispatch(signInEmail(email, password, callback)))\n            .catch(e => dispatch({\n                type: actionTypes.ERROR, payload: {title: e.response.statusText, text: e.response.data.error}\n            }))\n    };\n};\nexport const resetErrorCode = () => {\n    return (dispatch) => {\n        return dispatch({\n            type: actionTypes.RESET\n        });\n    };\n};\nexport const getProfileInfo = (uid) => {\n    return Axios.post(\"/api/users/getInfo\", {uid})\n        .then(res => res)\n        .catch(er => console.log(er));\n}\n","export const LOGGED_IN = \"LOGGED_IN\";\nexport const LOGGED_OUT = \"LOGGED_OUT\";\nexport const LOGGING_ACTION = \"LOGGING_ACTION\";\nexport const ERROR = \"ERROR\";\nexport const RESET = \"RESET\";","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport AccountCircle from \"@material-ui/icons/AccountCircle\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport FavoriteRoundedIcon from \"@material-ui/icons/FavoriteRounded\";\nimport StarsIcon from \"@material-ui/icons/Stars\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {withRouter} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {Divider, fade, List, ListItem, ListItemIcon, ListItemText, SwipeableDrawer} from \"@material-ui/core\";\nimport * as actions from \"../../Redux/actions\";\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Axios from '../../axiosInstance';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n        flexGrow: 1\n    },\n    list: {\n        width: 250,\n        cursor: \"pointer\"\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(2),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        padding: theme.spacing(0, 2),\n        height: '100%',\n        position: 'absolute',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        cursor: \"pointer\"\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 0),\n        // vertical padding + font size from searchIcon\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: '12ch',\n            '&:focus': {\n                width: '20ch',\n            },\n        },\n    }\n}));\n\nconst useStylesProgress = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        \"& > * + *\": {\n            marginLeft: theme.spacing(2)\n        }\n    }\n}));\n\nfunction CircularIndeterminate() {\n    const classes = useStylesProgress();\n\n    return (\n        <div className={classes.root}>\n            <CircularProgress color=\"secondary\"/>\n        </div>\n    );\n}\n\nconst Nav = props => {\n    React.useEffect(() => {\n        props.checkLogStatus(() =>\n            props.history.push(props.redirect === \"/login\" ? \"/\" : props.redirect));\n        // hacky alternative to componentDidMount() lifecycle\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    let [loggedInMenuOpen, setLoggedInMenuOpen] = React.useState(false);\n    let [searchValue, setSearchValue] = React.useState('');\n    let title;\n    switch (props.location.pathname) {\n        case \"/login\":\n            title = \"Sign in\";\n            break;\n        case \"/profile\":\n            title = props.loggedIn;\n            break;\n        case \"/u/:uid\":\n            title = \"User\";\n            break;\n        case \"/search\":\n            title = \"Search\";\n            break;\n        case \"/\":\n            title = \"Home\";\n            break;\n        default:\n            title = \"Home\";\n            break;\n    }\n    const classes = useStyles();\n    let [isDrawerOpen, setDrawer] = React.useState(false);\n    const searchHandler = () => {\n        if (searchValue.length > 0) {\n            Axios.post('/api/users/search', {search: searchValue})\n                .then(res => {\n                        setSearchValue(\"\");\n                        props.history.push({\n                            pathname: '/search',\n                            state: res.data\n                        });\n                    }\n                )\n        }\n    }\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Toolbar>\n                        <IconButton\n                            edge=\"start\"\n                            className={classes.menuButton}\n                            color=\"inherit\"\n                            aria-label=\"menu\"\n                            onClick={() => setDrawer(true)}\n                        >\n                            <MenuIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            {title}\n                        </Typography>\n                        {props.isAdmin ? <StarsIcon/> : null}\n                        <div className={classes.search}>\n                            <div className={classes.searchIcon} onClick={searchHandler}>\n                                <SearchIcon/>\n                            </div>\n                            <InputBase\n                                placeholder=\"Search…\"\n                                classes={{\n                                    root: classes.inputRoot,\n                                    input: classes.inputInput,\n                                }}\n                                value={searchValue}\n                                onChange={(e) => setSearchValue(e.target.value)}\n                                inputProps={{'aria-label': 'search'}}\n                                onKeyDown={(e) => e.key === 'Enter' ? searchHandler() : null}\n                            />\n                        </div>\n                        {props.loggingAction ? (\n                            <CircularIndeterminate/>\n                        ) : props.loggedIn ? (\n                            <>\n                                <span style={{display: \"flex\", cursor: \"pointer\"}}\n                                      onClick={(e) => setLoggedInMenuOpen(e.currentTarget)}>\n                                    <AccountCircle/>\n                                    <Typography style={{marginLeft: \"0.5em\"}}>{props.loggedIn}</Typography>\n                                </span>\n                                <Menu\n                                    anchorEl={loggedInMenuOpen === false ? null : loggedInMenuOpen}\n                                    keepMounted\n                                    open={loggedInMenuOpen}\n                                    onClose={() => setLoggedInMenuOpen(false)}\n                                >\n                                    <MenuItem onClick={() => {\n                                        setLoggedInMenuOpen(false);\n                                        props.history.push(\"/profile\")\n                                    }}>Profile</MenuItem>\n                                    <MenuItem onClick={() => {\n                                        setLoggedInMenuOpen(false);\n                                        props.logOut();\n                                    }}>Logout</MenuItem>\n                                </Menu>\n                            </>\n                        ) : (\n                            <Button\n                                color=\"inherit\"\n                                onClick={() => props.history.push(\"/login\")}\n                            >\n                                Sign In\n                            </Button>\n                        )}\n                    </Toolbar>\n                </AppBar>\n            </div>\n            <SwipeableDrawer\n                anchor={\"left\"}\n                open={isDrawerOpen}\n                onClose={() => setDrawer(false)}\n                onOpen={() => setDrawer(true)}\n            >\n                <div\n                    className={classes.list}\n                    role=\"presentation\"\n                    onClick={() => setDrawer(false)}\n                    onKeyDown={() => setDrawer(false)}\n                >\n                    {props.loggingAction ? (\n                        <CircularIndeterminate/>\n                    ) : props.loggedIn ? (\n                        <>\n                            <List>\n                                <ListItem onClick={() => props.history.push(\"/\")}>\n                                    <ListItemIcon>\n                                        <HomeIcon/>\n                                    </ListItemIcon>\n                                    <ListItemText>Home</ListItemText>\n                                </ListItem>\n                                <ListItem onClick={() => props.history.push(\"/profile\")}>\n                                    <ListItemIcon>\n                                        <FavoriteRoundedIcon/>\n                                    </ListItemIcon>\n                                    <ListItemText>Profile</ListItemText>\n                                </ListItem>\n                            </List>\n                            <Divider/>\n                            <List onClick={() => props.logOut()}>\n                                <ListItem>\n                                    <ListItemIcon>\n                                        <AccountCircleIcon/>\n                                    </ListItemIcon>\n                                    <ListItemText>Sign out</ListItemText>\n                                </ListItem>\n                            </List>\n                        </>\n                    ) : (\n                        <List onClick={() => props.history.push(\"/login\")}>\n                            <ListItem>\n                                <ListItemIcon>\n                                    <AccountCircleIcon/>\n                                </ListItemIcon>\n                                <ListItemText>Sign in</ListItemText>\n                            </ListItem>\n                        </List>\n                    )}\n                </div>\n            </SwipeableDrawer>\n        </React.Fragment>\n    );\n};\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.loggedIn,\n        isAdmin: state.isAdmin,\n        loggingAction: state.loggingAction,\n        error: state.error\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        checkLogStatus: (callback) => dispatch(actions.checkLogStatus(callback)),\n        logOut: () => dispatch(actions.logOut()),\n        resetError: () => dispatch(actions.resetErrorCode())\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(Nav));","import React from \"react\";\nimport {connect} from 'react-redux'\nimport {getProfileInfo} from \"../../Redux/actions\";\nimport {Avatar, Card, Typography} from \"@material-ui/core\";\nimport CSS from './Profile.module.css';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SaveIcon from '@material-ui/icons/Save';\nimport AddIcon from '@material-ui/icons/Add';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TextField from '@material-ui/core/TextField';\nimport {withRouter} from 'react-router-dom';\nimport Axios from '../../axiosInstance';\nimport * as actionTypes from '../../Redux/actionTypes';\n\nclass Profile extends React.Component {\n    state = {\n        name: \"\",\n        email: \"\",\n        date: \"\",\n        currentPass: \"\",\n        newPass: \"\",\n        editing: false,\n        comments: [],\n        username: \"\",\n        avatar: {\n            image: \"\",\n            mimetype: \"\"\n        }\n    }\n\n    componentDidMount = async () => {\n        const {data} = await getProfileInfo(this.props.uid);\n        this.setState({\n            name: data.name,\n            email: data.email,\n            date: data.date,\n            username: data._id\n        })\n        Axios.post(\"/api/comments/getAll\", {userID: this.props.uid})\n            .then(res => this.setState({comments: res.data ? res.data : []}));\n        Axios.post(\"/api/users/image\", {uid: this.props.uid})\n            .then(res => this.setState({avatar: res.data}))\n    }\n    changeName = (v) => {\n        this.setState({name: v});\n    }\n    changeEmail = (v) => {\n        this.setState({email: v})\n    }\n    changeCurrPass = (v) => {\n        this.setState({currentPass: v})\n    }\n    changePass = (v) => {\n        this.setState({newPass: v})\n    }\n    updateProfile = () => {\n        const data = {\n            email: this.state.email,\n            username: this.state.username,\n            name: this.state.name,\n            currentPass: this.state.currentPass,\n        }\n        if (this.state.newPass) {\n            data.newPass = this.state.newPass;\n        }\n        Axios.post(\"/api/users/setInfo\", data).then(res => {\n            if (res.status === 200) {\n                this.props.history.push(\"/\");\n            }\n        }).catch(e => this.props.setError({title: e.response.statusText, text: e.response.data.error}))\n    }\n    toggleVisibility = (_id) => {\n        Axios.post(\"/api/comments/toggleVisibility\", {_id}).then(res => {\n            if (res.status === 200) {\n                const comments = [...this.state.comments];\n                for (let i = 0; i < comments.length; i++) {\n                    if (comments[i]._id === _id) {\n                        comments[i].hidden = !comments[i].hidden;\n                        break;\n                    }\n                }\n                this.setState({comments});\n            }\n        }).catch(e => this.props.setError({title: e.response.statusText, text: e.response.data.error}))\n    }\n    deleteComment = (_id) => {\n        Axios.post(\"/api/comments/delete\", {_id}).then(res => {\n            if (res.status === 200) {\n                console.log(res);\n                const comments = [...this.state.comments].filter(i => i._id !== _id);\n                this.setState({comments});\n            }\n        }).catch(e => this.props.setError({title: e.response.statusText, text: e.response.data.error}))\n    }\n    updateAvatar = (event) => {\n        if (event.target.files && event.target.files[0]) {\n            const formData = new FormData();\n            let reader = new FileReader();\n            let file = event.target.files[0];\n            reader.onloadend = () => {\n                this.setState({\n                    avatar: reader.result,\n                });\n                formData.append(\"image\", file);\n                const config = {\n                    headers: {\n                        \"content-type\": \"multipart/form-data\"\n                    }\n                }\n                Axios.put(\"/api/users/image\", formData, config)\n                    .catch(e => this.props.setError({title: e.response.statusText, text: e.response.data.error}))\n            };\n            reader.readAsDataURL(file);\n        }\n    }\n\n    render() {\n        let toShow = (<>\n            <EditIcon className={CSS.editIcon} onClick={() => this.setState({editing: true})}/>\n            <Avatar className={CSS.avatar}\n                    src={`data:${this.state.avatar.mimetype};base64,${this.state.avatar.image}`}\n            >{this.state.name && this.state.name[0].toUpperCase()}</Avatar>\n            <Typography>\n                {this.state.name}\n            </Typography>\n            <Typography>\n                {this.state.email}\n            </Typography>\n\n            <Typography onClick={() => this.props.history.push(`/u/${this.state.username}`)} style={{cursor: \"pointer\"}}\n                        color=\"textSecondary\"\n            >\n                {this.state.username}\n            </Typography>\n            <Typography>\n                {new Date(this.state.date).toLocaleString()}\n            </Typography>\n        </>);\n        if (this.state.editing) {\n            toShow = (\n                <>\n                    <SaveIcon className={CSS.editIcon} onClick={this.updateProfile}/>\n                    <input\n                        accept=\"image/*\"\n                        onChange={this.updateAvatar}\n                        id=\"avatarselect\"\n                        style={{display: \"none\"}}\n                        type=\"file\"\n                    />\n                    <label htmlFor=\"avatarselect\">\n                        <Avatar className={CSS.avatar} src={this.state.avatar}>\n                            <AddIcon className={CSS.avatarPlus}/>\n                        </Avatar>\n                    </label>\n                    <form className={CSS.inputForm}>\n                        <div className={CSS.inputpadding}>\n                            <TextField\n                                type=\"name\"\n                                value={this.state.name}\n                                onChange={e => this.changeName(e.target.value)}\n                                label=\"Name\"\n                                autoComplete=\"name\"\n                            />\n                        </div>\n                        <div className={CSS.inputpadding}>\n                            <TextField\n                                type=\"email\"\n                                value={this.state.email}\n                                onChange={e => this.changeEmail(e.target.value)}\n                                label=\"Email\"\n                                autoComplete=\"email\"\n                            />\n                        </div>\n                        <div className={CSS.inputpadding}>\n                            <TextField\n                                type=\"password\"\n                                value={this.state.currentPass}\n                                onChange={e => this.changeCurrPass(e.target.value)}\n                                label=\"Current Password\"\n                                autoComplete=\"password\"\n                                required\n                            />\n                        </div>\n                        <div className={CSS.inputpadding}>\n                            <TextField\n                                type=\"password\"\n                                value={this.state.newPass}\n                                onChange={e => this.changePass(e.target.value)}\n                                label=\"New Password\"\n                                autoComplete=\"new-password\"\n                            />\n                        </div>\n                    </form>\n                </>\n            )\n        }\n        return (\n            <>\n                <Card className={CSS.root}>\n                    {toShow}\n                </Card>\n                {this.state.comments.length > 0 &&\n                <Card className={CSS.posts}>\n                    {this.state.comments.map((val, key) => (\n                        <Card className={CSS.postCard} key={key}>\n                            {val.hidden ?\n                                <AddIcon className={CSS.editIcon} onClick={() => this.toggleVisibility(val._id)}/> :\n                                <ClearIcon className={CSS.editIcon} onClick={() => this.toggleVisibility(val._id)}/>\n                            }\n                            <DeleteIcon className={[CSS.editIcon, CSS.removeIcon].join(\" \")}\n                                        onClick={() => this.deleteComment(val._id)}/>\n                            <Typography\n                                variant=\"body1\"\n                                color=\"textSecondary\"\n                                style={{cursor: \"pointer\"}}\n                                onClick={() => this.props.history.push(`/u/${val.fromID}`)}\n                            >{val.name}</Typography>\n                            <Typography style={{fontSize: \"0.5rem\"}}>{new Date(val.date).toLocaleString()}</Typography>\n                            <Typography variant=\"h6\" style={{fontWeight: \"bold\"}}>{val.title}</Typography>\n                            <Typography variant=\"body1\">{val.comment}</Typography>\n                            {val.edited && <Typography\n                                variant=\"body2\">{`Edited at ${new Date(val.editedTime).toLocaleString()}`}</Typography>}\n                        </Card>\n                    ))}\n                </Card>\n                }\n            </>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setError: (payload) => dispatch({type: actionTypes.ERROR, payload})\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        uid: state.loggedIn\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Profile));","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport * as actions from \"../../Redux/actions\";\nimport {connect} from \"react-redux\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\n\nconst useStylesSU = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(3)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}));\n\nfunction SignUp(props) {\n    const classes = useStylesSU();\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n                </Typography>\n                <form className={classes.form} autoComplete=\"on\">\n                    <Grid container spacing={2}>\n                        <Grid item xs={12}>\n                            <TextField\n                                autoComplete=\"name\"\n                                name=\"Name\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"Name\"\n                                label=\"Name\"\n                                autoFocus\n                                value={props.name.val}\n                                onChange={e => props.name.fn(e)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                                value={props.email.val}\n                                onChange={e => props.email.fn(e)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"username\"\n                                label=\"User name\"\n                                name=\"username\"\n                                autoComplete=\"username\"\n                                value={props.username.val}\n                                onChange={e => props.username.fn(e)}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <FormControl fullWidth>\n                                <TextField\n                                    variant=\"outlined\"\n                                    required\n                                    fullWidth\n                                    name=\"password\"\n                                    label=\"Password\"\n                                    type=\"password\"\n                                    id=\"password\"\n                                    autoComplete=\"current-password\"\n                                    value={props.pass.val}\n                                    onChange={e => props.pass.fn(e)}\n                                />\n                                <FormHelperText>Length: 4-16 characters</FormHelperText>\n                                <FormHelperText>Must have at least one number</FormHelperText>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12}/>\n                    </Grid>\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => props.submit()}\n                        disabled={!props.validity}\n                    >\n                        Sign Up\n                    </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link\n                                onClick={() => props.switchSignState()}\n                                variant=\"body2\"\n                                style={{cursor: \"pointer\"}}\n                            >\n                                Already have an account? Sign in\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nconst useStylesSI = makeStyles(theme => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1)\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}));\n\nfunction SignIn(props) {\n    const classes = useStylesSI();\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline/>\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon/>\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form className={classes.form} noValidate>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label=\"Email Address\"\n                        name=\"email\"\n                        autoComplete=\"email\"\n                        autoFocus\n                        value={props.email.val}\n                        onChange={e => props.email.fn(e)}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        value={props.pass.val}\n                        onChange={e => props.pass.fn(e)}\n                    />\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => props.submit()}\n                        disabled={!props.validity}\n                    >\n                        Sign In\n                    </Button>\n                    <Grid container>\n                        <Grid item>\n                            <Link\n                                onClick={() => props.switchSignState()}\n                                style={{cursor: \"pointer\"}}\n                                variant=\"body2\"\n                            >\n                                {\"Don't have an account? Sign Up\"}\n                            </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Container>\n    );\n}\n\nclass LoginPage extends React.Component {\n    state = {\n        signIn: true,\n        name: \"\",\n        pass: \"\",\n        email: \"\",\n        username: \"\"\n    };\n    validateSignIn = () => {\n        const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\].,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/g;\n        const passRegex = /^(?=.*\\d).{4,16}$/; // 4-16 with atleast one digit\n        return emailRegex.test(this.state.email) && passRegex.test(this.state.pass);\n    };\n    validateSignUp = () => {\n        const usernameRegex = /^[a-z0-9_]{3,16}$/igm;\n        return this.state.name.length && this.validateSignIn() && usernameRegex.test(this.state.username);\n    };\n    updateEmail = e => {\n        this.setState({email: e.target.value});\n    };\n    updatePass = e => {\n        this.setState({pass: e.target.value});\n    };\n    updateName = e => {\n        this.setState({name: e.target.value});\n    };\n    updateUsername = e => {\n        this.setState({username: e.target.value});\n    };\n\n    switchSignState = () => {\n        this.setState(state => {\n            return {signIn: !state.signIn};\n        });\n    };\n    redirect = () => {\n        let afterLogin = this.props.location.data.from.pathname;\n        if (afterLogin === \"/login\") afterLogin = \"/\";\n        this.props.history.push(afterLogin);\n    }\n    submit = () => {\n        if (this.state.signIn) {\n            this.props.signInEmail(this.state.email, this.state.pass, this.redirect);\n        } else {\n            this.props.signUpEmail(\n                this.state.email,\n                this.state.pass,\n                this.state.name,\n                this.state.username,\n                this.redirect\n            );\n        }\n    };\n\n    render() {\n        return (\n            <>\n                {this.state.signIn ? (\n                    <SignIn\n                        switchSignState={this.switchSignState}\n                        pass={{fn: this.updatePass, val: this.state.pass}}\n                        email={{fn: this.updateEmail, val: this.state.email}}\n                        submit={this.submit}\n                        validity={this.validateSignIn()}\n                    />\n                ) : (\n                    <SignUp\n                        switchSignState={this.switchSignState}\n                        pass={{fn: this.updatePass, val: this.state.pass}}\n                        email={{fn: this.updateEmail, val: this.state.email}}\n                        name={{fn: this.updateName, val: this.state.name}}\n                        username={{fn: this.updateUsername, val: this.state.username}}\n                        submit={this.submit}\n                        validity={this.validateSignUp()}\n                    />\n                )}\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.loggedIn\n    };\n};\nconst mapDispatchToProps = dispatch => {\n    return {\n        signInEmail: (user, pass, callback) => dispatch(actions.signInEmail(user, pass, callback)),\n        signUpEmail: (email, pass, name, user, callback) =>\n            dispatch(actions.signUpEmail(email, pass, name, user, callback))\n    };\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LoginPage);","import React from \"react\";\nimport Axios from '../../axiosInstance';\nimport {connect} from 'react-redux';\nimport {withRouter} from 'react-router-dom'\nimport * as actionTypes from \"../../Redux/actionTypes\";\nimport Card from \"@material-ui/core/Card\";\nimport CSS from \"../UserProfile/UserProfile.module.css\";\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\n\n\nclass Wall extends React.Component {\n    state = {\n        posts: [],\n        fetchSize: 20,\n        page: 0\n    }\n    componentDidMount = () => {\n        window.addEventListener(\"scroll\", this.onScroll, false);\n        this.fetchNextPosts();\n    }\n    componentWillUnmount = () => {\n        window.removeEventListener(\"scroll\", this.onScroll, false);\n    }\n    fetchNextPosts = () => {\n        Axios.post(\"/api/users/populateWall\",\n            {limit: this.state.fetchSize, page: this.state.page})\n            .then(response => this.setState({\n                posts: [...this.state.posts, ...response.data.posts],\n                page: this.state.page + 1\n            }))\n            .catch(e => this.props.setError({title: \"Error\", text: e.response.data.error}));\n    }\n    onScroll = () => {\n        if (this.hasReachedBottom()) {\n            this.fetchNextPosts();\n        }\n    };\n\n    hasReachedBottom = () => {\n        return (window.innerHeight + document.documentElement.scrollTop === document.scrollingElement.scrollHeight);\n    }\n\n    render() {\n        return (<Container maxWidth=\"md\" onScroll={this.onScroll}>\n            {this.state.posts.length > 0 &&\n            <Card className={CSS.posts}>\n                {this.state.posts.map((val, key) => (\n                    <Card className={CSS.postCard} key={key}>\n                        <div style={{display: \"flex\"}}>\n                            <Typography\n                                variant=\"body1\"\n                                color=\"textSecondary\"\n                                style={{cursor: \"pointer\"}}\n                                onClick={() => this.props.history.push(`/u/${val.fromID}`)}>{val.fromName}</Typography>\n                            {\n                                val.fromID !== val.toID &&\n                                <>\n                                    <ArrowRightAltIcon/>\n                                    <Typography\n                                        variant=\"body1\"\n                                        color=\"textSecondary\"\n                                        style={{cursor: \"pointer\"}}\n                                        onClick={() => this.props.history.push(`/u/${val.toID}`)}>{val.toName}</Typography>\n                                </>\n                            }\n                        </div>\n                        <Typography style={{fontSize: \"0.5rem\"}}>{new Date(val.date).toLocaleString()}</Typography>\n                        <Typography variant=\"h6\" style={{fontWeight: \"bold\"}}>{val.title}</Typography>\n                        <Typography variant=\"body1\">{val.comment}</Typography>\n                        {val.edited && <Typography\n                            variant=\"body2\"\n                            style={{fontSize: \"0.5rem\"}}>{`Edited at ${new Date(val.editedTime).toLocaleString()}`}</Typography>}\n                    </Card>\n                ))}\n            </Card>\n            }\n        </Container>)\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.loggedIn\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return {\n        setError: (payload) => dispatch({type: actionTypes.ERROR, payload})\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Wall));","import React from 'react';\nimport Container from \"@material-ui/core/Container\";\nimport Card from \"@material-ui/core/Card\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {withRouter} from 'react-router-dom';\n\nexport default withRouter(props =>\n    <Container maxWidth=\"md\">\n            {props.location.state.result.map((value, key) =>\n                <Card\n                    key={key}\n                    onClick={() => props.history.push(`/u/${value._id}`)}\n                    style={{\n                            cursor: \"pointer\",\n                            display: \"flex\",\n                            alignContent: \"center\",\n                            alignItems: \"center\",\n                            padding: \"1.5em\"\n                    }}\n                >\n                    <Avatar\n                        src={value.avatar.error ? null : `data:${value.avatar.mimetype};base64,${value.avatar.image}`}>{value.name[0]}</Avatar>\n                    <Typography style={{padding: \"1em\"}}>{value.name}</Typography>\n                </Card>\n            )}\n        </Container>\n)","import React from 'react';\nimport Axios from '../../axiosInstance';\nimport {withRouter} from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CSS from './UserProfile.module.css'\nimport * as actionTypes from \"../../Redux/actionTypes\";\nimport {connect} from \"react-redux\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EditIcon from \"@material-ui/icons/Edit\"\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport HowToRegIcon from '@material-ui/icons/HowToReg';\nimport HourglassFullIcon from '@material-ui/icons/HourglassFull';\nimport MessageIcon from '@material-ui/icons/Message';\nimport {Avatar} from \"@material-ui/core\";\n\nclass UserProfile extends React.Component {\n    state = {\n        id: \"\",\n        newPostTitle: \"\",\n        newPostText: \"\",\n        commentEditTitle: \"\",\n        commentEditText: \"\",\n        editing: false,\n        isFriend: \"none\",\n        comments: [],\n        avatar: {\n            image: \"\",\n            mimetype: \"\"\n        }\n    }\n    componentDidUpdate = (prevProps) => {\n        if (this.props.match.params.id !== this.state.id) {\n            this.componentDidMount();\n        }\n        if (this.props.loggedIn !== prevProps.loggedIn && this.props.loggedIn !== \"\") {\n            Axios.post(\"/api/users/getFriendshipStatus\", {id: this.state.id})\n                .then(response => this.setState({isFriend: response.data.friendshipStatus}))\n                .catch(e => {\n                    this.props.setError({title: \"Error\", text: e.response.data.error})\n                });\n        }\n    }\n    componentDidMount = async () => {\n        const {id} = this.props.match.params;\n        this.setState({id})\n        Axios.post(\"/api/users/getInfoPub\", {uid: id})\n            .then(response => {\n                if (!response.data) {\n                    this.props.setError({title: \"Error\", text: \"User not found\"});\n                } else {\n                    this.setState({id: response.data._id, name: response.data.name})\n                }\n            })\n            .catch(e => {\n                this.props.setError({title: \"Error\", text: e.response.data.error})\n            });\n        Axios.post(\"/api/comments/getPublic\", {id})\n            .then(response => {\n                this.setState({comments: response.data ? response.data : []})\n            })\n            .catch(e => {\n                this.props.setError({title: \"Error\", text: e.response.data.error})\n            });\n        Axios.post(\"/api/users/image\", {uid: id})\n            .then(res => this.setState({avatar: res.data}))\n    }\n    addPost = () => {\n        const payload = {\n            comment: this.state.newPostText,\n            userID: this.state.id\n        }\n        if (this.state.newPostTitle.length) {\n            payload.title = this.state.newPostTitle;\n        }\n        Axios.post(\"/api/comments/postNew\", payload)\n            .then(() => {\n                this.setState({\n                    newPostTitle: \"\",\n                    newPostText: \"\"\n                })\n            })\n            .catch(e => this.props.setError({title: \"Error\", text: e.response.data.error}));\n    }\n    isValid = () => {\n        return (this.state.newPostText.length > 0);\n    }\n    deleteComment = (_id) => {\n        Axios.post(\"/api/comments/delete\", {_id}).then(res => {\n            if (res.status === 200) {\n                console.log(res);\n                const comments = [...this.state.comments].filter(i => i._id !== _id);\n                this.setState({comments});\n            }\n        }).catch(e => this.props.setError({title: e.response.statusText, text: e.response.data.error}))\n    }\n    toggleFriend = () => {\n        if (!this.props.loggedIn) {\n            this.props.history.push(\"/login\");\n        }\n        Axios.post(\"/api/users/toggleFriend\", {_id: this.state.id})\n            .then(() => {\n                if (this.state.isFriend === \"none\") {\n                    this.setState({isFriend: \"pending\"});\n                } else {\n                    this.setState({isFriend: \"none\"});\n                }\n            })\n            .catch(e => this.props.setError({title: \"Error\", text: e.response.data.error}));\n    }\n    chatWith = id => {\n        Axios.post(\"/api/chats/getChatID\", {id});\n    }\n\n    render() {\n        let editing = (\n            <Dialog\n                open={this.state.editing}\n                onClose={() => this.setState({editing: false})}\n            >\n                <DialogTitle>Editing Comment</DialogTitle>\n                <DialogContent>\n                    <form>\n                        <div style={{display: \"flex\", flexDirection: \"column\"}}>\n                            <TextField\n                                value={this.state.commentEditTitle}\n                                placeholder=\"Change title\"\n                                onChange={(e) => this.setState({commentEditTitle: e.target.value})}\n                            />\n                            <TextField\n                                value={this.state.commentEditText}\n                                placeholder=\"Change text\"\n                                onChange={(e) => this.setState({commentEditText: e.target.value})}\n                            />\n                        </div>\n                    </form>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => {\n                        this.setState({\n                            editing: false,\n                            commentEditTitle: \"\",\n                            commentEditText: \"\"\n                        })\n                    }}>Cancel</Button>\n                    <Button onClick={() => {\n                        Axios.post(\"/api/comments/edit\", {\n                            _id: this.state.editing,\n                            title: this.state.commentEditTitle,\n                            comment: this.state.commentEditText,\n                        })\n                            .then(() => {\n                                let comments = [...this.state.comments].filter(x => x._id !== this.state.editing);\n                                this.setState({\n                                    editing: false,\n                                    commentEditTitle: \"\",\n                                    commentEditText: \"\",\n                                    comments\n                                })\n                            })\n                            .catch((e) => this.props.setError({title: \"Error\", text: e.response.data.error}))\n                    }}\n                    >Save Changes</Button>\n                </DialogActions>\n            </Dialog>\n        );\n        return (\n            <Container maxWidth=\"md\">\n                {editing}\n                <Card className={CSS.root}>\n                    <Avatar className={CSS.avatar}\n                            src={`data:${this.state.avatar.mimetype};base64,${this.state.avatar.image}`}\n                    >{this.state.name && this.state.name[0].toUpperCase()}</Avatar>\n                    {(this.state.id !== this.props.loggedIn) ? this.state.isFriend === \"none\" ?\n                        <PersonAddIcon className={CSS.editIcon} onClick={this.toggleFriend}/> :\n                        this.state.isFriend === \"pending\" ?\n                            <HourglassFullIcon className={CSS.editIcon} onClick={this.toggleFriend}/> :\n                            <>\n                                <HowToRegIcon className={CSS.editIcon} onClick={this.toggleFriend}/>\n                                <MessageIcon className={[CSS.editIcon, CSS.removeIcon].join(\" \")}\n                                             onClick={() => this.chatWith(this.state.id)}/>\n                            </>\n                        : null\n                    }\n                    <Typography color=\"textSecondary\">{this.state.id}</Typography>\n                    {this.state.name && <Typography>{this.state.name}</Typography>}\n                </Card>\n                <Card className={CSS.root}>\n                    {this.isValid() && <AddIcon className={CSS.editIcon} onClick={this.addPost}/>}\n                    <Typography>New Post</Typography>\n                    <form style={{marginTop: \"2em\"}}>\n                        <TextField\n                            placeholder=\"Give your post a title\"\n                            value={this.state.newPostTitle}\n                            onChange={(e) => this.setState({newPostTitle: e.target.value})}\n                            style={{marginBottom: \"1rem\"}}\n                        />\n                        <TextField\n                            multiline\n                            placeholder=\"Write something.\"\n                            maxrows=\"8\"\n                            value={this.state.newPostText}\n                            onChange={(e) => this.setState({newPostText: e.target.value})}\n                            fullWidth\n                        />\n                    </form>\n                </Card>\n                {this.state.comments.length > 0 &&\n                <Card className={CSS.posts}>\n                    {this.state.comments.map((val, key) => (\n                        <Card className={CSS.postCard} key={key}>\n                            {val.fromID === this.props.loggedIn &&\n                            <>\n                                <EditIcon\n                                    className={CSS.editIcon}\n                                    onClick={() => {\n                                        this.setState({\n                                            editing: val._id,\n                                            commentEditTitle: val.title,\n                                            commentEditText: val.comment\n                                        })\n                                    }}\n                                />\n                                <DeleteIcon\n                                    className={[CSS.editIcon, CSS.removeIcon].join(\" \")}\n                                    onClick={() => this.deleteComment(val._id)}\n\n                                />\n                            </>\n                            }\n\n                            <Typography\n                                variant=\"body1\"\n                                color=\"textSecondary\"\n                                style={{cursor: \"pointer\"}}\n                                onClick={() => this.props.history.push(`/u/${val.fromID}`)}\n                            >{val.name}</Typography>\n                            <Typography style={{fontSize: \"0.5rem\"}}>{new Date(val.date).toLocaleString()}</Typography>\n                            <Typography variant=\"h6\" style={{fontWeight: \"bold\"}}>{val.title}</Typography>\n                            <Typography variant=\"body1\">{val.comment}</Typography>\n                            {val.edited && <Typography\n                                variant=\"body2\"\n                                style={{fontSize: \"0.5rem\"}}>{`Edited at ${new Date(val.editedTime).toLocaleString()}`}</Typography>}\n                        </Card>\n                    ))}\n                </Card>\n                }\n            </Container>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setError: (payload) => dispatch({type: actionTypes.ERROR, payload})\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.loggedIn\n    }\n}\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(UserProfile));","import * as actionTypes from \"./actionTypes\";\n\nconst messageState = {\n    loggedIn: \"\",\n    isAdmin: false,\n    loggingAction: false,\n    error: null\n};\nconst mainReducer = (state = messageState, action) => {\n    switch (action.type) {\n        case actionTypes.LOGGING_ACTION: {\n            return {\n                ...state,\n                loggingAction: true\n            };\n        }\n        case actionTypes.LOGGED_IN:\n            return {\n                ...state,\n                loggingAction: false,\n                loggedIn: action.payload.loggedIn,\n                isAdmin: action.payload.isAdmin\n            };\n        case actionTypes.LOGGED_OUT:\n            return {\n                ...state,\n                loggedIn: \"\",\n                loggingAction: false,\n                isAdmin: false\n            };\n        case actionTypes.ERROR:\n            return {\n                ...state,\n                error: {title: action.payload.title, text: action.payload.text}\n            };\n        case actionTypes.RESET:\n            return {...state, error: null};\n        default:\n            return state;\n    }\n};\nexport default mainReducer;","import {applyMiddleware, createStore} from \"redux\";\nimport reducers from \"./reducer\";\nimport thunk from \"redux-thunk\";\n\nexport const store = createStore(reducers, applyMiddleware(thunk));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'},\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister();\n            })\n            .catch(error => {\n                console.error(error.message);\n            });\n    }\n}\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default props => (\n    <div>\n        <Dialog\n            open={props.open}\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n        >\n            <DialogTitle id=\"alert-dialog-title\">{props.title}</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-description\">\n                    {props.text}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.accept} color=\"primary\" autoFocus>\n                    {props.buttonText ? props.buttonText : `Close`}\n                </Button>\n            </DialogActions>\n        </Dialog>\n    </div>\n);","import React from \"react\";\nimport DialogModal from \"./Components/DialogModal/DialogModal\";\nimport {connect} from 'react-redux';\nimport * as actions from './Redux/actions';\n\nclass ErrorHandler extends React.Component {\n    render() {\n        let title, text;\n        if (this.props.error) {\n            title = this.props.error.title;\n            text = this.props.error.text;\n        }\n        return (\n            <DialogModal\n                open={this.props.error !== null}\n                title={title}\n                text={text}\n                accept={() => this.props.resetError()}\n            />\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        resetError: () => dispatch(actions.resetErrorCode())\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        error: state.error\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(ErrorHandler);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Nav from './Containers/Nav/Nav';\nimport Profile from './Containers/Profile/Profile';\nimport Login from './Containers/Login/Login';\nimport Wall from './Containers/Wall/Wall';\nimport Search from './Components/Search/Search';\nimport UserProfile from './Containers/UserProfile/UserProfile';\nimport {CssBaseline} from '@material-ui/core';\nimport {BrowserRouter, Redirect, Route, withRouter} from 'react-router-dom';\nimport {store} from './Redux/Store';\nimport {connect, Provider} from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport ErrorHandler from \"./ErrorHandler\";\n\nrequire('dotenv').config();\n\nconst toRender = props => {\n    const privateRoutes = (\n        <>\n            <Route exact path=\"/\" component={Wall}/>\n            <Route exact path=\"/profile\" component={Profile}/>\n        </>\n    )\n    const loginRoutes = (\n        <>\n            <Route exact path=\"/login\" component={Login}/>\n            <Redirect to={{\n                pathname: '/login',\n                data: {from: props.location},\n            }}/>\n        </>\n    )\n    const publicRoutes = (\n        <>\n            <Route path=\"/search\" component={Search}/>\n            <Route path=\"/u/:id\" component={UserProfile}/>\n        </>\n    )\n    return (\n        <>\n            <Nav redirect={props.location}/>\n            {props.loggedIn ? privateRoutes : loginRoutes}\n            {publicRoutes}\n        </>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        loggedIn: state.loggedIn,\n    }\n}\nconst ToRender = connect(mapStateToProps)(withRouter(toRender));\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <BrowserRouter basename=\"/FlashChat\">\n                <CssBaseline/>\n                <ErrorHandler/>\n                <ToRender/>\n            </BrowserRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}